==============================================================================================================
||		  Тема 1: Установка и настройка рабочего окружения. Изучение Linux и терминала. Основы Git.		    ||
==============================================================================================================	


	Как я озвучивал раннее, нам предстоит работать в операционной системе Линукс, причём без графической
оболочки. Это означает, что у нас не будет рабочего стола, мы не сможем запустить программы, использующие гра-
фику. Зато мы сможем пользоваться консольными утилитами и приложениями. По этой самой причине все уроки будут
в текстовом формате.


											===================
											|| Блок 1. Linux ||
											===================

	Материал к изучению:

		1. https://blog.sedicomm.com/2022/05/09/kak-ustanovit-linux-ubuntu-ryadom-parallelno-s-windows-10-
	podrobnaya-instrukcziya-dlya-nachinayushhih/
		- Установка Ubuntu (Linux дистрибутив) рядом с Windows, 
		2. https://habr.com/ru/post/184396/ - "Про Linux". Немного о системе в общих чертах, статья ознакоми-
	тельная.
		3. https://serverspace.ru/support/help/struktura-fajlovoj-sistemy-linux/ - О структуре файловой сис-
	темы линукс. Очень важно запомнить какие файлы в какие каталоги (etc, home, root, var и т.д.) попадают.
		4. https://setiwik.ru/komandy-linux-polnoe-rukovodstvo/ - Руководство, описывающее некоторые команды
	терминала (Терминал запускается комбинацией клавиш ctrl + alt + t). Пишутся они следующим образом 
	[Команда] [Ключ1] [ПараметрыКлюча] [Параметры команды].
	
	Параметры и ключи не являются обязательными в зависимости от команды, все ключи и можно посмотреть в 
	справке. Ключи определяют каким образом будет работать инструкция. Например, ключ --help вместо исполнения
	выводит в терминал подсказку по данной команде.  

	Чаще всего придётся использовать следующие:
	cd - Сменить каталог (cd ../home/user/Documents - данная команда выйдет из папки на уровень выше, а потом
	перейдет по пути  home -> user -> Documents);
	ls - Показать список файлов и папок каталога, в котором мы находимся;
	mkdir- Создаёт каталог (mkdir progs - создаёт папку с названием progs);
	rm - Удаление файла или каталога ("rm -r progs" удалит папку "progs", "rm 1.txt" удалит файл "1.txt");
	mv - Перемещение файла или каталого, аналог "Вырезать" ("mv 1.py ../lesson_2" переместит файл 1.py из
	папки на уровень выше и добавит её в папку "lesson_2"); 
	man - Получение справки по любой команде ("man rm" покажет справку по команде "rm");
	apt - пакетная установка модулей и библиотек ("sudo apt install telegram-desktop" - скачает и установит 
	Telegram на компьютер). https://pingvinus.ru/note/apt - гайд по утилите apt.
	nano - встроенный текстовый редактор. "nano 1.py" Откроет файл 1.py или создаст его в случае отсутствия
	в текстовом редакторе nano. 

	Для запускаться какой-либо утилиты или приложения, нам достаточно 


	Задачи:

		1. Установить актуальную версию Ubuntu desktop, вывести в терминале информацию о системе.
		2. Установить некоторые пакеты программ: cal, python3, git, telegram-desktop, lynx.
		3. Настроить текстовый редактор nano (https://habr.com/ru/post/489542/). Для настройки открываем файл
	в каталоге /etc с помощью "sudo nano nanorc". Изначально все настройки в файле будут закомментированы 
	(закомментированная строка кода игнорируется при обработке). Чтобы раскомментировать строку, необходимо 
	удалить символ #.

	Отчётность (в Telegram):
		1. Скриншот терминала с информацией об ОС.
		2. Копия файла "nanorc".


											========================
											|| Блок 2. Основы Git ||
											========================

	Материал к изучению:

		1. https://proglib.io/p/git-for-half-an-hour - Краткое руководство по гиту.
		2. https://git-scm.com/book/ru/v2 - Git Book. Всё, что можно узнать о данной СКВ находится в книге.
	Ветвление и всё, что дальше можно пока не изучать. Мы к этому вернёмся позже.
		3. https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-
	access-token - Создание персонального токена доступа для получения доступа к репозиторию через протокол 
	https. Эту статью читать на английском и в процессе выполнения упражнений.
		4. https://www.youtube.com/watch?v=OwWZ5JgJneQ - Подключение к репозиторию посредством ssh протокола.

	Задачи:

		1. Настроить утилиту Git по руководству из первого пунтка материалов.
		1. Зарегистрировать аккаунт на сайте github.com.
		2. Создать в домашнем каталоге папку education, в ней проинициализировать локальный репозиторий.
		3. Создать папку "lesson-1", а в ней "Hello World" программу с названием "1.py".
		4. Подключить наш локальный репозиторий education к удалённому через https-протокол, создать 
	fire-grained access token (3 пункт материалов).
		5. Отправить изменения (запушить) в удаленный репозиторий, проверить на сайте, что "1.py" появился на	
	сервере.
		6. Изменить протокол подключения с https на ssh (4 пункт материалов).
		7. Скопировать (cp 1.py 2.py) первый файл и запушить через ssh-протокол.
		8. Отменить второй коммит и запушить изменения. Проверить, что в удаленном репозитории остался только
	файл первого коммита (должен находиться только 1.py).
		9. Добавить в аккаунт на гитхабе ssh-ключ, скопированный из файла "Приложение 1.txt" аналогично тому,
	как выполнялось в пункте 6 задач блока Git.

	Отчётность(в Telegram):

		1. Ссылка на аккаунт в github.
		2. Скриншоты терминала и сайта, показывающие изменения в локальном и удалённом репозиториях (+Показать 
	командой git log историю коммитов локального репозитория после выполнения 5, 7, и 8 пунктов).
		3. Скриншот, показывающий наличие двух ssh-ключей, подключенных к аккаунту.


											========================
											|| Погружение во мрак ||
											========================

		Когда работа с гитхабом завершена, мы отключаем автоматический запуск графической оболочки при включе-
	нии операционной системы. Открываем терминал и пишем следующую команду:
	systemctl set-default multi-user.target
		После перезагрузки компьютера, система запустится только в консольном режиме. В этом режиме нам и 
	предстоит работать. Вся последующая отчётность будет заключаться в запушивании решений задач в свой репо-
	зиторий на гитхаб. Для поиска информации информации можно пользоваться смартфоном (для запоминания необхо-
	димо печатать код своими руками, а не копипастить) или консольным веб-браузером Lynx, установленным при
	выполнении второй задачи первого блока, из-за отсутствия графики функционал текстового браузера ограничен,
	но пользоваться вполне возможно. Получение материалов и задач будет происходить обратно механизму отправки
	отчетности при помощи стягивания с удаленного репозитория в локальный изменений, которые я буду туда пу-
	шить, а именно текстовых файлов с заданиями и вводными данными для проверки работоспособности программы. 

	P.S.
		Включить графику до следующей перезагрузки или убийства процесса графического сервера xorg можно ко-
	мандой "startx"; включение автозапуска графической оболочки - "systemctl set-default graphical.target". Но
	делать этого я тебе настоятельно не рекомендую. Успехов в твоих начинаниях!
